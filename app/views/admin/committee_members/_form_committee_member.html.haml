= effective_form_with(model: [:admin, committee_member], engine: true) do |f|
  - f.object.user_type ||= current_user.class.name
  - f.object.committee_type ||= Effective::Committee.name

  = f.hidden_field :user_type
  = f.hidden_field :user_id

  = f.hidden_field :committee_type
  = f.hidden_field :committee_id

  - ajax_url = (effective_resources.users_effective_ajax_index_path unless Rails.env.test?)

  - if f.object.new_record?
    - if inline_datatable? && inline_datatable.attributes[:committee_id].present?
      = f.select :user_ids, current_user.class.all, label: 'Select user(s)', required: true, ajax_url: ajax_url

    - if inline_datatable? && inline_datatable.attributes[:user_id].present?
      = f.select :committee_ids, Effective::Committee.sorted.all, label: "Select #{committee_label}(s)"

    - unless inline_datatable?
      = f.select :committee_id, Effective::Committee.sorted.all
      = f.select :user_ids, current_user.class.sorted, label: 'User(s)', required: true, ajax_url: ajax_url, hint: "Add one or more #{committee_member_label.downcase}"

  - if f.object.persisted?
    = f.static_field :committee
    = f.static_field :user, label: committee_member_label

  = f.text_field :category

  .row
    .col= f.date_field :start_on
    .col= f.date_field :end_on, hint: 'End dating will remove access'

  - if EffectiveCommittees.use_effective_roles
    = f.checks :roles, EffectiveRoles.roles_collection(f.object, skip_disabled: true)

  = effective_submit(f)
