= effective_form_with(model: [:admin, committee_folder], engine: true) do |f|
  - f.object.committee_type ||= Effective::Committee.name

  = f.hidden_field :committee_type
  = f.hidden_field :committee_id

  - if inline_datatable? && inline_datatable.attributes[:committee_folder_id].present?
    = f.hidden_field :committee_folder_id
  - elsif f.object.persisted?
    = f.static_field :committee
    = f.select :committee_folder_id, Effective::CommitteeFolder.sorted.where(committee: f.object.committee), label: "Parent Folder", hint: "Leave blank to create a top-level folder"
  - else
    = f.select :committee_id, Effective::Committee.sorted.all,
      'data-load-ajax-url': effective_committees.new_admin_committee_folder_path,
      'data-load-ajax-div': '#effective-committees-ajax'

    #effective-committees-ajax
      = f.select :committee_folder_id, Effective::CommitteeFolder.sorted.where(committee: f.object.committee), label: "Parent Folder", hint: "Leave blank to create a top-level folder"

  = f.text_field :title

  = acts_as_slugged_fields(f, url: (effective_committees.commitee_url(f.object) rescue nil))

  - if defined?(EffectiveArticleEditor)
    = f.article_editor :body, hint: "Displayed on the #{committee_folder_label} page"
  - else
    = f.rich_text_area :body, hint: "Displayed on the #{committee_folder_label} page"

  = f.submit
